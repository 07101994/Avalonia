<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>net461;netcoreapp1.1</TargetFrameworks>
    <EnableDefaultCompileItems>False</EnableDefaultCompileItems>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="InvariantCultureFixture.cs" />
    <Compile Include="MockRendererFactory.cs" />
    <Compile Include="NotifyingBase.cs" />
    <Compile Include="TestLogSink.cs" />
    <Compile Include="TestTemplatedRoot.cs" />
    <Compile Include="TestRoot.cs" />
    <Compile Include="TestServices.cs" />
    <Compile Include="UnitTestApplication.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="MockWindowingPlatform.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Condition="'$(TargetFramework)' == 'net461'" Include="..\..\src\Avalonia.DotNetFrameworkRuntime\Avalonia.DotNetFrameworkRuntime.csproj">
      <Name>Avalonia.DotNetFrameworkRuntime</Name>
    </ProjectReference>
	<ProjectReference Condition="'$(TargetFramework)' == 'netcoreapp1.1'" Include="..\..\src\Avalonia.DotNetCoreRuntime\Avalonia.DotNetCoreRuntime.csproj">
      <Name>Avalonia.DotNetCoreRuntime</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\src\Markup\Avalonia.Markup.Xaml\Avalonia.Markup.Xaml.csproj">
      <Name>Avalonia.Markup.Xaml</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\src\Markup\Avalonia.Markup\Avalonia.Markup.csproj">
      <Name>Avalonia.Markup</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\src\Avalonia.Animation\Avalonia.Animation.csproj">
      <Name>Avalonia.Animation</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\src\Avalonia.Base\Avalonia.Base.csproj">
      <Name>Avalonia.Base</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\src\Avalonia.Controls\Avalonia.Controls.csproj">
      <Name>Avalonia.Controls</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\src\Avalonia.Input\Avalonia.Input.csproj">
      <Name>Avalonia.Input</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\src\Avalonia.Interactivity\Avalonia.Interactivity.csproj">
      <Name>Avalonia.Interactivity</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\src\Avalonia.Layout\Avalonia.Layout.csproj">
      <Name>Avalonia.Layout</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\src\Avalonia.Visuals\Avalonia.Visuals.csproj">
      <Name>Avalonia.Visuals</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\src\Avalonia.Styling\Avalonia.Styling.csproj">
      <Name>Avalonia.Styling</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\src\Avalonia.Themes.Default\Avalonia.Themes.Default.csproj">
      <Name>Avalonia.Themes.Default</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="app.config" />
  </ItemGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
  <ItemGroup>
    <PackageReference Include="Moq" Version="4.7.1" />
    <PackageReference Include="System.Reactive.Core" Version="3.0.0" />
    <PackageReference Include="System.Reactive.Interfaces" Version="3.0.0" />
    <PackageReference Include="xunit.abstractions" Version="2.0.1" />
    <PackageReference Include="xunit.assert" Version="2.2.0" />
    <PackageReference Include="xunit.core" Version="2.2.0" />
    <PackageReference Include="xunit.extensibility.core" Version="2.2.0" />
    <PackageReference Include="xunit.extensibility.execution" Version="2.2.0" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.2.0" />

  </ItemGroup>
    <ItemGroup Condition="'$(TargetFramework)' == 'netcoreapp1.1'">
        <PackageReference Include="Microsoft.NET.Test.Sdk" Version="15.0.0" />
    </ItemGroup>
  <Import Condition="'$(TargetFramework)' == 'net461'" Project="$(MSBuildThisFileDirectory)..\..\src\Shared\nuget.workaround.targets" />
</Project>